# https://www.playframework.com/documentation/latest/Configuration
# play.filters.enabled += "play.filters.headers.SecurityHeadersFilter"

play.filters.headers.contentSecurityPolicy = "default-src *; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://fonts.googleapis.com;  style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:"
# play.filters.headers.contentSecurityPolicy = "default-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://fonts.googleapis.com;  style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:"

# play.filters.headers.contentSecurityPolicy = "default-src 'self'; style-src 'self' 'unsafe-inline'"
play.filters.headers.permittedCrossDomainPolicies = "all"
# play.filters.headers.contentSecurityPolicy = "default-src 'self'; script-src 'self' http://localhost:9000 'unsafe-inline'; connect-src 'self'; img-src 'self' http://localhost:9000; style-src 'self' http://localhost:9000 'unsafe-inline'; font-src 'self' http://localhost:9000 'unsafe-inline'"

# Header set Content-Security-Policy: "default-src https: 'unsafe-inline'; report-uri https://altfitcom.report-uri.com/r/d/csp/enforce;"

play.filters.enabled += "play.filters.cors.CORSFilter"
play.modules.enabled += "play.api.db.DBModule"
play.modules.enabled += "play.api.db.HikariCPModule"

play.filters.cors {
  pathPrefixes = ["/", "/lookup", "lookup"]
  allowedOrigins = ["http://localhost", "https://localhost", "http://localhost:9000", "https://localhost:9443"]
  allowedHttpMethods = ["GET", "POST", "PUT", "DELETE"]
  allowedHttpHeaders = ["Accept"]
  // preflightMaxAge = 3 days
  serveForbiddenOrigins = true
  exposedHeaders = ["Access-Control-Allow-Origin"]
}

play.filters.enabled += "play.filters.csrf.CSRFFilter"

# https://stackoverflow.com/questions/44381638/how-to-configure-ssl-certificate-on-play-framework
# https://sysgears.com/articles/how-to-use-https-with-play-framework/
# session.httpOnly=false - deprecated, use now:
play.http.session.httpOnly=false
# play.crypto.secret="changeme"
play.http.secret.key="sdfjhJKHasdwe32"  # https://www.playframework.com/documentation/2.7.x/ApplicationSecret
play.server.https.keyStore.path = "/home/baueran/tomcat.keystore"
play.server.https.keyStore.type = "JKS"
play.server.https.keyStore.password = "sdahgdsa21HGas21%*jJ"

# Redirect to https always
play.filters.enabled += play.filters.https.RedirectHttpsFilter
# By default, the redirect only happens in Prod mode. To override this, set
play.filters.https.redirectEnabled = true

play.db {
  # The combination of these two settings results in "db.default" as the default JDBC pool:
  config = "db"
  default = "default"

  # Play uses HikariCP as the default connection pool.  You can override settings by changing the prototype:
  # cf. https://stackoverflow.com/questions/49075152/conflict-between-hikari-quill-and-postgres-in-the-conf-file-for-play-2-6
  prototype {
    username = null
    password = null

    hikaricp {
      # Sets a fixed JDBC connection pool size of 50
      minimumIdle = 4
      maximumPoolSize = 10
    }
  }
}

## JDBC Datasource
db.default {
  driver=org.postgresql.Driver
  username = "oorep_user"
  password = ${?OOREP_USER_PASS}
  database = "oorep"
  databaseName = "oorep"
  serverName = "localhost"
  host = "localhost"
  portNumber = 5432
  connectionTimeout = 30000
  url="jdbc:postgresql://localhost:5432/oorep"

}

play.evolutions.db.default.autoApply=true

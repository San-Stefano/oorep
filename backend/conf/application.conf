# ################################################################
# https://www.playframework.com/documentation/latest/Configuration
# https://www.playframework.com/documentation/2.6.x/Configuration
# ################################################################

# Apparently, this is deprecated, and we set the policy in apache2.conf anyway
# 'null' means to not set this header at all here.
play.filters.headers.contentSecurityPolicy = null

play.filters.enabled += "play.filters.csrf.CSRFFilter"

play.filters.csrf.cookie.name = "csrfCookie"
play.filters.csrf.token.name = "csrfToken"
play.filters.csrf.cookie.secure = true
play.http.session.secure = true
play.http.session.httpOnly = false
play.http.session.sameSite = "strict"
play.http.secret.key = ${OOREP_APP_SECRET}  # https://www.playframework.com/documentation/2.7.x/ApplicationSecret

play.modules.enabled += "play.api.db.DBModule"
play.modules.enabled += "play.api.db.HikariCPModule"

play.http.parser.maxMemoryBuffer=20MB
play.http.parser.maxDiskBuffer=20MB

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = ["localhost", "."${?OOREP_APP_DOMAIN}]
}

play.db {
  # The combination of these two settings results in "db.default" as the default JDBC pool:
  config = "db"
  default = "default"

  # Play uses HikariCP as the default connection pool.  You can override settings by changing the prototype:
  # cf. https://stackoverflow.com/questions/49075152/conflict-between-hikari-quill-and-postgres-in-the-conf-file-for-play-2-6
  prototype {
    username = null
    password = null

    hikaricp {
      minimumIdle = 4
      maximumPoolSize = 10
    }
  }
}

db.default {
  driver = org.postgresql.Driver
  username = ${?OOREP_DB_USER}
  password = ${?OOREP_DB_PASS}
  database = ${?OOREP_DB_NAME}
  host = ${?OOREP_DB_HOST}
  portNumber = ${?OOREP_DB_PORT}
  connectionTimeout = 30000
  url = "jdbc:postgresql://"${?OOREP_DB_HOST}":"${OOREP_DB_PORT}"/"${?OOREP_DB_NAME}
}

play.evolutions.db.default.autoApply = true
